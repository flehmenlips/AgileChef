generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id
  clerkId       String   @unique
  email         String   @unique
  firstName     String?
  lastName      String?
  imageUrl      String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  boards        Board[]
}

model Board {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  columns   Column[]
}

model Column {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  order     Int
  limit     Int?
  boardId   String
  cards     Card[]
  board     Board    @relation(fields: [boardId], references: [id], onDelete: Cascade)
}

model Card {
  id           String       @id @default(uuid())
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  title        String
  description  String?
  color        String?
  status       RecipeStatus @default(DORMANT)
  order        Int
  instructions String[]
  labels       String[]
  columnId     String
  column       Column       @relation(fields: [columnId], references: [id], onDelete: Cascade)
  ingredients  Ingredient[]
}

model Ingredient {
  id        String   @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  quantity  Float
  unit      Unit
  name      String
  cardId    String
  card      Card     @relation(fields: [cardId], references: [id], onDelete: Cascade)
}

enum RecipeStatus {
  FULLY_STOCKED
  OUT_OF_STOCK
  LOW_STOCK
  DORMANT
}

enum Unit {
  G
  KG
  ML
  L
  TSP
  TBSP
  CUP
  PIECE
  PINCH
}
